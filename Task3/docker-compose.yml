version: '3.8'

services:
  frontend:
    build: ./frontend
    container_name: shopfast-frontend
    ports:
      - "3000:80"
    depends_on:
      - api-gateway
    restart: unless-stopped
    mem_limit: 512M
    cpus: 0.5
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - shopfast-network

  api-gateway:
    build: ./api-gateway
    container_name: shopfast-gateway
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - CATALOGUE_SERVICE_URL=http://catalogue-service:5000
      - USER_SERVICE_URL=http://user-service:8081
      - CART_SERVICE_URL=http://cart-service:3001
    depends_on:
      - catalogue-service
      - user-service
      - cart-service
    restart: unless-stopped
    mem_limit: 512M
    cpus: 0.5
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - shopfast-network

  catalogue-service:
    build: ./catalogue-service
    container_name: shopfast-catalogue
    environment:
      - POSTGRES_HOST=postgres-db
      - POSTGRES_DB=products
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
    depends_on:
      - postgres-db
    restart: unless-stopped
    mem_limit: 512M
    cpus: 0.5
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - shopfast-network

  user-service:
    build: ./user-service
    container_name: shopfast-users
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo-db:27017/users
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    depends_on:
      - mongo-db
      - redis
    restart: unless-stopped
    mem_limit: 768M
    cpus: 1.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - shopfast-network

  cart-service:
    build: ./cart-service
    container_name: shopfast-cart
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    restart: unless-stopped
    mem_limit: 512M
    cpus: 0.5
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - shopfast-network

  postgres-db:
    image: postgres:13-alpine
    container_name: shopfast-postgres
    environment:
      - POSTGRES_DB=products
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    mem_limit: 1G
    cpus: 1.0
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shopfast-network

  mongo-db:
    image: mongo:5
    container_name: shopfast-mongo
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    mem_limit: 1G
    cpus: 1.0
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shopfast-network

  redis:
    image: redis:6-alpine
    container_name: shopfast-redis
    restart: unless-stopped
    mem_limit: 256M
    cpus: 0.3
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shopfast-network

networks:
  shopfast-network:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
